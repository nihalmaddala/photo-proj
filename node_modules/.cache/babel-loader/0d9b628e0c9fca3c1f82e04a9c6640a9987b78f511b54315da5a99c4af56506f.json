{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../core/resource.mjs\";\nimport { CursorPage } from \"../../../core/pagination.mjs\";\nimport { path } from \"../../../internal/utils/path.mjs\";\nexport class Messages extends APIResource {\n  /**\n   * Get the messages in a stored chat completion. Only Chat Completions that have\n   * been created with the `store` parameter set to `true` will be returned.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n   *   'completion_id',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(completionID, query = {}, options) {\n    return this._client.getAPIList(path`/chat/completions/${completionID}/messages`, CursorPage, {\n      query,\n      ...options\n    });\n  }\n}","map":{"version":3,"names":["APIResource","CursorPage","path","Messages","list","completionID","query","options","_client","getAPIList"],"sources":["/Users/nihalmaddala/photo-proj/node_modules/openai/src/resources/chat/completions/messages.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { APIResource } from '../../../core/resource';\nimport * as CompletionsAPI from './completions';\nimport { ChatCompletionStoreMessagesPage } from './completions';\nimport { CursorPage, type CursorPageParams, PagePromise } from '../../../core/pagination';\nimport { RequestOptions } from '../../../internal/request-options';\nimport { path } from '../../../internal/utils/path';\n\nexport class Messages extends APIResource {\n  /**\n   * Get the messages in a stored chat completion. Only Chat Completions that have\n   * been created with the `store` parameter set to `true` will be returned.\n   *\n   * @example\n   * ```ts\n   * // Automatically fetches more pages as needed.\n   * for await (const chatCompletionStoreMessage of client.chat.completions.messages.list(\n   *   'completion_id',\n   * )) {\n   *   // ...\n   * }\n   * ```\n   */\n  list(\n    completionID: string,\n    query: MessageListParams | null | undefined = {},\n    options?: RequestOptions,\n  ): PagePromise<ChatCompletionStoreMessagesPage, CompletionsAPI.ChatCompletionStoreMessage> {\n    return this._client.getAPIList(\n      path`/chat/completions/${completionID}/messages`,\n      CursorPage<CompletionsAPI.ChatCompletionStoreMessage>,\n      { query, ...options },\n    );\n  }\n}\n\nexport interface MessageListParams extends CursorPageParams {\n  /**\n   * Sort order for messages by timestamp. Use `asc` for ascending order or `desc`\n   * for descending order. Defaults to `asc`.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport declare namespace Messages {\n  export { type MessageListParams as MessageListParams };\n}\n\nexport { type ChatCompletionStoreMessagesPage };\n"],"mappings":"AAAA;SAESA,WAAW,QAAE;SAGbC,UAAU,QAAsC;SAEhDC,IAAI,QAAE;AAEf,OAAM,MAAOC,QAAS,SAAQH,WAAW;EACvC;;;;;;;;;;;;;;EAcAI,IAAIA,CACFC,YAAoB,EACpBC,KAAA,GAA8C,EAAE,EAChDC,OAAwB;IAExB,OAAO,IAAI,CAACC,OAAO,CAACC,UAAU,CAC5BP,IAAI,qBAAqBG,YAAY,WAAW,EAChDJ,UAAqD,EACrD;MAAEK,KAAK;MAAE,GAAGC;IAAO,CAAE,CACtB;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}