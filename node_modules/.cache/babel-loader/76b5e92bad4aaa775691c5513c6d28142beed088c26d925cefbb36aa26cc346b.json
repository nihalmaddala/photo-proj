{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"../internal/errors.mjs\";\nexport class OpenAIError extends Error {}\nexport class APIError extends OpenAIError {\n  constructor(status, error, message, headers) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.requestID = headers?.get('x-request-id');\n    this.error = error;\n    const data = error;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n  static makeMessage(status, error, message) {\n    const msg = error?.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status || !headers) {\n      return new APIConnectionError({\n        message,\n        cause: castToError(errorResponse)\n      });\n    }\n    const error = errorResponse?.['error'];\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexport class APIUserAbortError extends APIError {\n  constructor({\n    message\n  } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\nexport class APIConnectionError extends APIError {\n  constructor({\n    message,\n    cause\n  }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({\n    message\n  } = {}) {\n    super({\n      message: message ?? 'Request timed out.'\n    });\n  }\n}\nexport class BadRequestError extends APIError {}\nexport class AuthenticationError extends APIError {}\nexport class PermissionDeniedError extends APIError {}\nexport class NotFoundError extends APIError {}\nexport class ConflictError extends APIError {}\nexport class UnprocessableEntityError extends APIError {}\nexport class RateLimitError extends APIError {}\nexport class InternalServerError extends APIError {}\nexport class LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the length limit was reached`);\n  }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the request was rejected by the content filter`);\n  }\n}\nexport class InvalidWebhookSignatureError extends Error {\n  constructor(message) {\n    super(message);\n  }\n}","map":{"version":3,"names":["castToError","OpenAIError","Error","APIError","constructor","status","error","message","headers","makeMessage","requestID","get","data","code","param","type","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","InvalidWebhookSignatureError"],"sources":["/Users/nihalmaddala/photo-proj/node_modules/openai/src/core/error.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError } from '../internal/errors';\n\nexport class OpenAIError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends OpenAIError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  readonly code: string | null | undefined;\n  readonly param: string | null | undefined;\n  readonly type: string | undefined;\n\n  readonly requestID: string | null | undefined;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.requestID = headers?.get('x-request-id');\n    this.error = error;\n\n    const data = error as Record<string, any>;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (!status || !headers) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = (errorResponse as Record<string, any>)?.['error'];\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n\nexport class LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the length limit was reached`);\n  }\n}\n\nexport class ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the request was rejected by the content filter`);\n  }\n}\n\nexport class InvalidWebhookSignatureError extends Error {\n  constructor(message: string) {\n    super(message);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}