{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { OpenAIError } from \"../../core/error.mjs\";\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nexport const isAbsoluteURL = url => {\n  return startsWithSchemeRegexp.test(url);\n};\nexport let isArray = val => (isArray = Array.isArray, isArray(val));\nexport let isReadonlyArray = isArray;\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x) {\n  if (typeof x !== 'object') {\n    return {};\n  }\n  return x ?? {};\n}\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function isObj(obj) {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexport const ensurePresent = value => {\n  if (value == null) {\n    throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  }\n  return value;\n};\nexport const validatePositiveInteger = (name, n) => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\nexport const coerceInteger = value => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = value => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = value => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexport const maybeCoerceInteger = value => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\nexport const maybeCoerceFloat = value => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = value => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\nexport const safeJSON = text => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};","map":{"version":3,"names":["OpenAIError","startsWithSchemeRegexp","isAbsoluteURL","url","test","isArray","val","Array","isReadonlyArray","maybeObj","x","isEmptyObj","obj","_k","hasOwn","key","Object","prototype","hasOwnProperty","call","isObj","ensurePresent","value","validatePositiveInteger","name","n","Number","isInteger","coerceInteger","Math","round","parseInt","coerceFloat","parseFloat","coerceBoolean","Boolean","maybeCoerceInteger","undefined","maybeCoerceFloat","maybeCoerceBoolean","safeJSON","text","JSON","parse","err"],"sources":["/Users/nihalmaddala/photo-proj/node_modules/openai/src/internal/utils/values.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { OpenAIError } from '../../core/error';\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\n\nexport const isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport let isArray = (val: unknown): val is unknown[] => ((isArray = Array.isArray), isArray(val));\nexport let isReadonlyArray = isArray as (val: unknown) => val is readonly unknown[];\n\n/** Returns an object if the given value isn't an object, otherwise returns as-is */\nexport function maybeObj(x: unknown): object {\n  if (typeof x !== 'object') {\n    return {};\n  }\n\n  return x ?? {};\n}\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn<T extends object = object>(obj: T, key: PropertyKey): key is keyof T {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) {\n    throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  }\n\n  return value;\n};\n\nexport const validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value == null) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}