{"ast":null,"code":"import { encode, is_buffer, maybe_map, has } from \"./utils.mjs\";\nimport { default_format, default_formatter, formatters } from \"./formats.mjs\";\nimport { isArray } from \"../utils/values.mjs\";\nconst array_prefix_generators = {\n  brackets(prefix) {\n    return String(prefix) + '[]';\n  },\n  comma: 'comma',\n  indices(prefix, key) {\n    return String(prefix) + '[' + key + ']';\n  },\n  repeat(prefix) {\n    return String(prefix);\n  }\n};\nconst push_to_array = function (arr, value_or_array) {\n  Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\nlet toISOString;\nconst defaults = {\n  addQueryPrefix: false,\n  allowDots: false,\n  allowEmptyArrays: false,\n  arrayFormat: 'indices',\n  charset: 'utf-8',\n  charsetSentinel: false,\n  delimiter: '&',\n  encode: true,\n  encodeDotInKeys: false,\n  encoder: encode,\n  encodeValuesOnly: false,\n  format: default_format,\n  formatter: default_formatter,\n  /** @deprecated */\n  indices: false,\n  serializeDate(date) {\n    return (toISOString ?? (toISOString = Function.prototype.call.bind(Date.prototype.toISOString)))(date);\n  },\n  skipNulls: false,\n  strictNullHandling: false\n};\nfunction is_non_nullish_primitive(v) {\n  return typeof v === 'string' || typeof v === 'number' || typeof v === 'boolean' || typeof v === 'symbol' || typeof v === 'bigint';\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n  let obj = object;\n  let tmp_sc = sideChannel;\n  let step = 0;\n  let find_flag = false;\n  while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n    // Where object last appeared in the ref tree\n    const pos = tmp_sc.get(object);\n    step += 1;\n    if (typeof pos !== 'undefined') {\n      if (pos === step) {\n        throw new RangeError('Cyclic object value');\n      } else {\n        find_flag = true; // Break while\n      }\n    }\n    if (typeof tmp_sc.get(sentinel) === 'undefined') {\n      step = 0;\n    }\n  }\n  if (typeof filter === 'function') {\n    obj = filter(prefix, obj);\n  } else if (obj instanceof Date) {\n    obj = serializeDate?.(obj);\n  } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n    obj = maybe_map(obj, function (value) {\n      if (value instanceof Date) {\n        return serializeDate?.(value);\n      }\n      return value;\n    });\n  }\n  if (obj === null) {\n    if (strictNullHandling) {\n      return encoder && !encodeValuesOnly ?\n      // @ts-expect-error\n      encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n    }\n    obj = '';\n  }\n  if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n    if (encoder) {\n      const key_value = encodeValuesOnly ? prefix\n      // @ts-expect-error\n      : encoder(prefix, defaults.encoder, charset, 'key', format);\n      return [formatter?.(key_value) + '=' +\n      // @ts-expect-error\n      formatter?.(encoder(obj, defaults.encoder, charset, 'value', format))];\n    }\n    return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n  }\n  const values = [];\n  if (typeof obj === 'undefined') {\n    return values;\n  }\n  let obj_keys;\n  if (generateArrayPrefix === 'comma' && isArray(obj)) {\n    // we need to join elements in\n    if (encodeValuesOnly && encoder) {\n      // @ts-expect-error values only\n      obj = maybe_map(obj, encoder);\n    }\n    obj_keys = [{\n      value: obj.length > 0 ? obj.join(',') || null : void undefined\n    }];\n  } else if (isArray(filter)) {\n    obj_keys = filter;\n  } else {\n    const keys = Object.keys(obj);\n    obj_keys = sort ? keys.sort(sort) : keys;\n  }\n  const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n  const adjusted_prefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n  if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n    return adjusted_prefix + '[]';\n  }\n  for (let j = 0; j < obj_keys.length; ++j) {\n    const key = obj_keys[j];\n    const value =\n    // @ts-ignore\n    typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n    if (skipNulls && value === null) {\n      continue;\n    }\n    // @ts-ignore\n    const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n    const key_prefix = isArray(obj) ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjusted_prefix, encoded_key) : adjusted_prefix : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n    sideChannel.set(object, step);\n    const valueSideChannel = new WeakMap();\n    valueSideChannel.set(sentinel, sideChannel);\n    push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys,\n    // @ts-ignore\n    generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n  }\n  return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n  if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n    throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n  }\n  if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n    throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n  }\n  if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n    throw new TypeError('Encoder has to be a function.');\n  }\n  const charset = opts.charset || defaults.charset;\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n  let format = default_format;\n  if (typeof opts.format !== 'undefined') {\n    if (!has(formatters, opts.format)) {\n      throw new TypeError('Unknown format option provided.');\n    }\n    format = opts.format;\n  }\n  const formatter = formatters[format];\n  let filter = defaults.filter;\n  if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n    filter = opts.filter;\n  }\n  let arrayFormat;\n  if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n    arrayFormat = opts.arrayFormat;\n  } else if ('indices' in opts) {\n    arrayFormat = opts.indices ? 'indices' : 'repeat';\n  } else {\n    arrayFormat = defaults.arrayFormat;\n  }\n  if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n    throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n  }\n  const allowDots = typeof opts.allowDots === 'undefined' ? !!opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n  return {\n    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n    // @ts-ignore\n    allowDots: allowDots,\n    allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n    arrayFormat: arrayFormat,\n    charset: charset,\n    charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    commaRoundTrip: !!opts.commaRoundTrip,\n    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n    encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n    encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n    filter: filter,\n    format: format,\n    formatter: formatter,\n    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n    // @ts-ignore\n    sort: typeof opts.sort === 'function' ? opts.sort : null,\n    strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n  };\n}\nexport function stringify(object, opts = {}) {\n  let obj = object;\n  const options = normalize_stringify_options(opts);\n  let obj_keys;\n  let filter;\n  if (typeof options.filter === 'function') {\n    filter = options.filter;\n    obj = filter('', obj);\n  } else if (isArray(options.filter)) {\n    filter = options.filter;\n    obj_keys = filter;\n  }\n  const keys = [];\n  if (typeof obj !== 'object' || obj === null) {\n    return '';\n  }\n  const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n  const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n  if (!obj_keys) {\n    obj_keys = Object.keys(obj);\n  }\n  if (options.sort) {\n    obj_keys.sort(options.sort);\n  }\n  const sideChannel = new WeakMap();\n  for (let i = 0; i < obj_keys.length; ++i) {\n    const key = obj_keys[i];\n    if (options.skipNulls && obj[key] === null) {\n      continue;\n    }\n    push_to_array(keys, inner_stringify(obj[key], key,\n    // @ts-expect-error\n    generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n  }\n  const joined = keys.join(options.delimiter);\n  let prefix = options.addQueryPrefix === true ? '?' : '';\n  if (options.charsetSentinel) {\n    if (options.charset === 'iso-8859-1') {\n      // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n      prefix += 'utf8=%26%2310003%3B&';\n    } else {\n      // encodeURIComponent('✓')\n      prefix += 'utf8=%E2%9C%93&';\n    }\n  }\n  return joined.length > 0 ? prefix + joined : '';\n}","map":{"version":3,"names":["encode","is_buffer","maybe_map","has","default_format","default_formatter","formatters","isArray","array_prefix_generators","brackets","prefix","String","comma","indices","key","repeat","push_to_array","arr","value_or_array","Array","prototype","push","apply","toISOString","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","delimiter","encodeDotInKeys","encoder","encodeValuesOnly","format","formatter","serializeDate","date","Function","call","bind","Date","skipNulls","strictNullHandling","is_non_nullish_primitive","v","sentinel","inner_stringify","object","generateArrayPrefix","commaRoundTrip","filter","sort","sideChannel","obj","tmp_sc","step","find_flag","get","undefined","pos","RangeError","value","key_value","values","obj_keys","length","join","keys","Object","encoded_prefix","replace","adjusted_prefix","j","encoded_key","key_prefix","set","valueSideChannel","WeakMap","normalize_stringify_options","opts","TypeError","stringify","options","i","joined"],"sources":["/Users/nihalmaddala/photo-proj/node_modules/openai/src/internal/qs/stringify.ts"],"sourcesContent":["import { encode, is_buffer, maybe_map, has } from './utils';\nimport { default_format, default_formatter, formatters } from './formats';\nimport type { NonNullableProperties, StringifyOptions } from './types';\nimport { isArray } from '../utils/values';\n\nconst array_prefix_generators = {\n  brackets(prefix: PropertyKey) {\n    return String(prefix) + '[]';\n  },\n  comma: 'comma',\n  indices(prefix: PropertyKey, key: string) {\n    return String(prefix) + '[' + key + ']';\n  },\n  repeat(prefix: PropertyKey) {\n    return String(prefix);\n  },\n};\n\nconst push_to_array = function (arr: any[], value_or_array: any) {\n  Array.prototype.push.apply(arr, isArray(value_or_array) ? value_or_array : [value_or_array]);\n};\n\nlet toISOString;\n\nconst defaults = {\n  addQueryPrefix: false,\n  allowDots: false,\n  allowEmptyArrays: false,\n  arrayFormat: 'indices',\n  charset: 'utf-8',\n  charsetSentinel: false,\n  delimiter: '&',\n  encode: true,\n  encodeDotInKeys: false,\n  encoder: encode,\n  encodeValuesOnly: false,\n  format: default_format,\n  formatter: default_formatter,\n  /** @deprecated */\n  indices: false,\n  serializeDate(date) {\n    return (toISOString ??= Function.prototype.call.bind(Date.prototype.toISOString))(date);\n  },\n  skipNulls: false,\n  strictNullHandling: false,\n} as NonNullableProperties<StringifyOptions & { formatter: (typeof formatters)['RFC1738'] }>;\n\nfunction is_non_nullish_primitive(v: unknown): v is string | number | boolean | symbol | bigint {\n  return (\n    typeof v === 'string' ||\n    typeof v === 'number' ||\n    typeof v === 'boolean' ||\n    typeof v === 'symbol' ||\n    typeof v === 'bigint'\n  );\n}\n\nconst sentinel = {};\n\nfunction inner_stringify(\n  object: any,\n  prefix: PropertyKey,\n  generateArrayPrefix: StringifyOptions['arrayFormat'] | ((prefix: string, key: string) => string),\n  commaRoundTrip: boolean,\n  allowEmptyArrays: boolean,\n  strictNullHandling: boolean,\n  skipNulls: boolean,\n  encodeDotInKeys: boolean,\n  encoder: StringifyOptions['encoder'],\n  filter: StringifyOptions['filter'],\n  sort: StringifyOptions['sort'],\n  allowDots: StringifyOptions['allowDots'],\n  serializeDate: StringifyOptions['serializeDate'],\n  format: StringifyOptions['format'],\n  formatter: StringifyOptions['formatter'],\n  encodeValuesOnly: boolean,\n  charset: StringifyOptions['charset'],\n  sideChannel: WeakMap<any, any>,\n) {\n  let obj = object;\n\n  let tmp_sc = sideChannel;\n  let step = 0;\n  let find_flag = false;\n  while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n    // Where object last appeared in the ref tree\n    const pos = tmp_sc.get(object);\n    step += 1;\n    if (typeof pos !== 'undefined') {\n      if (pos === step) {\n        throw new RangeError('Cyclic object value');\n      } else {\n        find_flag = true; // Break while\n      }\n    }\n    if (typeof tmp_sc.get(sentinel) === 'undefined') {\n      step = 0;\n    }\n  }\n\n  if (typeof filter === 'function') {\n    obj = filter(prefix, obj);\n  } else if (obj instanceof Date) {\n    obj = serializeDate?.(obj);\n  } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n    obj = maybe_map(obj, function (value) {\n      if (value instanceof Date) {\n        return serializeDate?.(value);\n      }\n      return value;\n    });\n  }\n\n  if (obj === null) {\n    if (strictNullHandling) {\n      return encoder && !encodeValuesOnly ?\n          // @ts-expect-error\n          encoder(prefix, defaults.encoder, charset, 'key', format)\n        : prefix;\n    }\n\n    obj = '';\n  }\n\n  if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n    if (encoder) {\n      const key_value =\n        encodeValuesOnly ? prefix\n          // @ts-expect-error\n        : encoder(prefix, defaults.encoder, charset, 'key', format);\n      return [\n        formatter?.(key_value) +\n          '=' +\n          // @ts-expect-error\n          formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n      ];\n    }\n    return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n  }\n\n  const values: string[] = [];\n\n  if (typeof obj === 'undefined') {\n    return values;\n  }\n\n  let obj_keys;\n  if (generateArrayPrefix === 'comma' && isArray(obj)) {\n    // we need to join elements in\n    if (encodeValuesOnly && encoder) {\n      // @ts-expect-error values only\n      obj = maybe_map(obj, encoder);\n    }\n    obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n  } else if (isArray(filter)) {\n    obj_keys = filter;\n  } else {\n    const keys = Object.keys(obj);\n    obj_keys = sort ? keys.sort(sort) : keys;\n  }\n\n  const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n  const adjusted_prefix =\n    commaRoundTrip && isArray(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n\n  if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n    return adjusted_prefix + '[]';\n  }\n\n  for (let j = 0; j < obj_keys.length; ++j) {\n    const key = obj_keys[j];\n    const value =\n      // @ts-ignore\n      typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key as any];\n\n    if (skipNulls && value === null) {\n      continue;\n    }\n\n    // @ts-ignore\n    const encoded_key = allowDots && encodeDotInKeys ? (key as any).replace(/\\./g, '%2E') : key;\n    const key_prefix =\n      isArray(obj) ?\n        typeof generateArrayPrefix === 'function' ?\n          generateArrayPrefix(adjusted_prefix, encoded_key)\n        : adjusted_prefix\n      : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n\n    sideChannel.set(object, step);\n    const valueSideChannel = new WeakMap();\n    valueSideChannel.set(sentinel, sideChannel);\n    push_to_array(\n      values,\n      inner_stringify(\n        value,\n        key_prefix,\n        generateArrayPrefix,\n        commaRoundTrip,\n        allowEmptyArrays,\n        strictNullHandling,\n        skipNulls,\n        encodeDotInKeys,\n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n        filter,\n        sort,\n        allowDots,\n        serializeDate,\n        format,\n        formatter,\n        encodeValuesOnly,\n        charset,\n        valueSideChannel,\n      ),\n    );\n  }\n\n  return values;\n}\n\nfunction normalize_stringify_options(\n  opts: StringifyOptions = defaults,\n): NonNullableProperties<Omit<StringifyOptions, 'indices'>> & { indices?: boolean } {\n  if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n    throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n  }\n\n  if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n    throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n  }\n\n  if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n    throw new TypeError('Encoder has to be a function.');\n  }\n\n  const charset = opts.charset || defaults.charset;\n  if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n    throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n  }\n\n  let format = default_format;\n  if (typeof opts.format !== 'undefined') {\n    if (!has(formatters, opts.format)) {\n      throw new TypeError('Unknown format option provided.');\n    }\n    format = opts.format;\n  }\n  const formatter = formatters[format];\n\n  let filter = defaults.filter;\n  if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n    filter = opts.filter;\n  }\n\n  let arrayFormat: StringifyOptions['arrayFormat'];\n  if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n    arrayFormat = opts.arrayFormat;\n  } else if ('indices' in opts) {\n    arrayFormat = opts.indices ? 'indices' : 'repeat';\n  } else {\n    arrayFormat = defaults.arrayFormat;\n  }\n\n  if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n    throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n  }\n\n  const allowDots =\n    typeof opts.allowDots === 'undefined' ?\n      !!opts.encodeDotInKeys === true ?\n        true\n      : defaults.allowDots\n    : !!opts.allowDots;\n\n  return {\n    addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n    // @ts-ignore\n    allowDots: allowDots,\n    allowEmptyArrays:\n      typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n    arrayFormat: arrayFormat,\n    charset: charset,\n    charsetSentinel:\n      typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n    commaRoundTrip: !!opts.commaRoundTrip,\n    delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n    encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n    encodeDotInKeys:\n      typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n    encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n    encodeValuesOnly:\n      typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n    filter: filter,\n    format: format,\n    formatter: formatter,\n    serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n    skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n    // @ts-ignore\n    sort: typeof opts.sort === 'function' ? opts.sort : null,\n    strictNullHandling:\n      typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n  };\n}\n\nexport function stringify(object: any, opts: StringifyOptions = {}) {\n  let obj = object;\n  const options = normalize_stringify_options(opts);\n\n  let obj_keys: PropertyKey[] | undefined;\n  let filter;\n\n  if (typeof options.filter === 'function') {\n    filter = options.filter;\n    obj = filter('', obj);\n  } else if (isArray(options.filter)) {\n    filter = options.filter;\n    obj_keys = filter;\n  }\n\n  const keys: string[] = [];\n\n  if (typeof obj !== 'object' || obj === null) {\n    return '';\n  }\n\n  const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n  const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n  if (!obj_keys) {\n    obj_keys = Object.keys(obj);\n  }\n\n  if (options.sort) {\n    obj_keys.sort(options.sort);\n  }\n\n  const sideChannel = new WeakMap();\n  for (let i = 0; i < obj_keys.length; ++i) {\n    const key = obj_keys[i]!;\n\n    if (options.skipNulls && obj[key] === null) {\n      continue;\n    }\n    push_to_array(\n      keys,\n      inner_stringify(\n        obj[key],\n        key,\n        // @ts-expect-error\n        generateArrayPrefix,\n        commaRoundTrip,\n        options.allowEmptyArrays,\n        options.strictNullHandling,\n        options.skipNulls,\n        options.encodeDotInKeys,\n        options.encode ? options.encoder : null,\n        options.filter,\n        options.sort,\n        options.allowDots,\n        options.serializeDate,\n        options.format,\n        options.formatter,\n        options.encodeValuesOnly,\n        options.charset,\n        sideChannel,\n      ),\n    );\n  }\n\n  const joined = keys.join(options.delimiter);\n  let prefix = options.addQueryPrefix === true ? '?' : '';\n\n  if (options.charsetSentinel) {\n    if (options.charset === 'iso-8859-1') {\n      // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n      prefix += 'utf8=%26%2310003%3B&';\n    } else {\n      // encodeURIComponent('✓')\n      prefix += 'utf8=%E2%9C%93&';\n    }\n  }\n\n  return joined.length > 0 ? prefix + joined : '';\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}