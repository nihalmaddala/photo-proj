{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport function isAbortError(err) {\n  return typeof err === 'object' && err !== null && (\n  // Spec-compliant fetch implementations\n  'name' in err && err.name === 'AbortError' ||\n  // Expo fetch\n  'message' in err && String(err.message).includes('FetchRequestCanceledException'));\n}\nexport const castToError = err => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      if (Object.prototype.toString.call(err) === '[object Error]') {\n        // @ts-ignore - not all envs have native support for cause yet\n        const error = new Error(err.message, err.cause ? {\n          cause: err.cause\n        } : {});\n        if (err.stack) error.stack = err.stack;\n        // @ts-ignore - not all envs have native support for cause yet\n        if (err.cause && !error.cause) error.cause = err.cause;\n        if (err.name) error.name = err.name;\n        return error;\n      }\n    } catch {}\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};","map":{"version":3,"names":["isAbortError","err","name","String","message","includes","castToError","Error","Object","prototype","toString","call","error","cause","stack","JSON","stringify"],"sources":["/Users/nihalmaddala/photo-proj/node_modules/openai/src/internal/errors.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nexport function isAbortError(err: unknown) {\n  return (\n    typeof err === 'object' &&\n    err !== null &&\n    // Spec-compliant fetch implementations\n    (('name' in err && (err as any).name === 'AbortError') ||\n      // Expo fetch\n      ('message' in err && String((err as any).message).includes('FetchRequestCanceledException')))\n  );\n}\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      if (Object.prototype.toString.call(err) === '[object Error]') {\n        // @ts-ignore - not all envs have native support for cause yet\n        const error = new Error(err.message, err.cause ? { cause: err.cause } : {});\n        if (err.stack) error.stack = err.stack;\n        // @ts-ignore - not all envs have native support for cause yet\n        if (err.cause && !error.cause) error.cause = err.cause;\n        if (err.name) error.name = err.name;\n        return error;\n      }\n    } catch {}\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n"],"mappings":"AAAA;AAEA,OAAM,SAAUA,YAAYA,CAACC,GAAY;EACvC,OACE,OAAOA,GAAG,KAAK,QAAQ,IACvBA,GAAG,KAAK,IAAI;EACZ;EACE,MAAM,IAAIA,GAAG,IAAKA,GAAW,CAACC,IAAI,KAAK,YAAY;EACnD;EACC,SAAS,IAAID,GAAG,IAAIE,MAAM,CAAEF,GAAW,CAACG,OAAO,CAAC,CAACC,QAAQ,CAAC,+BAA+B,CAAE,CAAC;AAEnG;AAEA,OAAO,MAAMC,WAAW,GAAIL,GAAQ,IAAW;EAC7C,IAAIA,GAAG,YAAYM,KAAK,EAAE,OAAON,GAAG;EACpC,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,EAAE;IAC3C,IAAI;MACF,IAAIO,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACV,GAAG,CAAC,KAAK,gBAAgB,EAAE;QAC5D;QACA,MAAMW,KAAK,GAAG,IAAIL,KAAK,CAACN,GAAG,CAACG,OAAO,EAAEH,GAAG,CAACY,KAAK,GAAG;UAAEA,KAAK,EAAEZ,GAAG,CAACY;QAAK,CAAE,GAAG,EAAE,CAAC;QAC3E,IAAIZ,GAAG,CAACa,KAAK,EAAEF,KAAK,CAACE,KAAK,GAAGb,GAAG,CAACa,KAAK;QACtC;QACA,IAAIb,GAAG,CAACY,KAAK,IAAI,CAACD,KAAK,CAACC,KAAK,EAAED,KAAK,CAACC,KAAK,GAAGZ,GAAG,CAACY,KAAK;QACtD,IAAIZ,GAAG,CAACC,IAAI,EAAEU,KAAK,CAACV,IAAI,GAAGD,GAAG,CAACC,IAAI;QACnC,OAAOU,KAAK;MACd;IACF,CAAC,CAAC,MAAM,CAAC;IACT,IAAI;MACF,OAAO,IAAIL,KAAK,CAACQ,IAAI,CAACC,SAAS,CAACf,GAAG,CAAC,CAAC;IACvC,CAAC,CAAC,MAAM,CAAC;EACX;EACA,OAAO,IAAIM,KAAK,CAACN,GAAG,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}